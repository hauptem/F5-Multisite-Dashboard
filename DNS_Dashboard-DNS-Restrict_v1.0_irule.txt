# DNS_Dashboard-DNS-Restrict_v1.0_irule
#
# Ver:  1.0
# Date: July 2025
# Author: Eric Haupt
# License: MIT
# Copyright (c) 2025 Eric Haupt
# Released under the MIT License. See LICENSE file for details.
#
# Description:
#   This iRule needs to be applied to the dedicated and cache-enabled DNS UDP listener
#   that will be used by LTM to perform PTR queries for the dashboard.
#
#  Datagroup: dashboard-dns-clients 
#   Contains authorized client subnets (LTM Self-IPs) which permits DNS request to the listener.
#   A TCP listener is not required for the dashboard.
#
#  Note that trying to restrict UDP/DNS using drop or reject does not fully work in GTM. It appears
#  to function and you will even see logs that clients are being dropped, but the front end and API host
#  DNS monitors will remain unaffected. It seems DNS is processed before client IP checks.
#  For UDP we need to use a DNS response of REFUSED to get the end state functions restriction function 
#  that is desired. The Dashboard only requires/uses PTR records, however LTM's DNS monitor can only function 
#  using A or AAAA records, therefore we need to permit both PTR records and A records for the dashboard and 
#  monitor to function, but we will scope them to allowed hostnames specific for the dashboard.
#
when DNS_REQUEST {
    # Get client IP address
    set client_ip [IP::client_addr]
    # Check if client IP is in the allowed data group
    if { not ([class match $client_ip equals dashboard-dns-clients]) } {
        # Refuse requests from unauthorized IP addresses
        log local0.info "DNS query refused from unauthorized IP: $client_ip"
        DNS::answer clear
        DNS::header rcode REFUSED
        DNS::return
    }
    # Get the DNS query type and name
    set qtype [DNS::question type]
    set qname [DNS::question name]
    # Check if the query type is PTR or A record
    if { $qtype equals "PTR" } {
        # Allow all PTR queries to proceed (dashboard uses only reverse DNS)
    } elseif { $qtype equals "A" } {
        # Restrict A record queries to specific allowed hostnames
        # Convert to lowercase for consistent matching
        set qname_lower [string tolower $qname]
        # Define allowed A record patterns for dashboard LTM monitors
        # Specific hostname allowlist
        set allowed_a_records {
            "dashboard.lab.local"
            "gtm.lab.local"
        }
        # Check if the requested A record is in our allowlist
        set a_record_allowed 0
        foreach allowed_record $allowed_a_records {
            if { $qname_lower equals [string tolower $allowed_record] } {
                set a_record_allowed 1
                break
            }
        }
        if { !$a_record_allowed } {
            log local0.info "A record query refused from $client_ip: unauthorized hostname $qname"
            DNS::answer clear
            DNS::header rcode REFUSED
            DNS::return
        }
    } else {
        # Refuse all other query types
        log local0.info "Unsupported query type refused from $client_ip: type $qtype for $qname"
        DNS::answer clear
        DNS::header rcode REFUSED
        DNS::return
    }
}