// Multi-Site Dashboard JavaScript - DATA MODULE - Dashboard Version: 1.7 - Date: September 2025 - Author: Eric Haupt - Copyright (c) 2025 Eric Haupt - Released under the MIT License. See LICENSE file for details.
Dashboard.data.getInstanceData=function(){if(!Dashboard.core.instanceID){Dashboard.core.initializeInstanceIsolation();}if(!Dashboard.data.instances){Dashboard.data.instances={};}if(!Dashboard.data.instances[Dashboard.core.instanceID]){Dashboard.data.instances[Dashboard.core.instanceID]={memberStates:{},customOrder:{},reorderMode:false,draggedElement:null,memberStateCache:new Map(),config:{maxHistoryEntries:50,maxMembersSupported:1000},logger:{enabled:false,maxEntries:5000,initialized:false,pendingLogs:[]},hostnameCache:{maxEntries:5000,chunkSize:250,persistencePrefix:'hostnameCache_'}};}return Dashboard.data.instances[Dashboard.core.instanceID];};Dashboard.data.init=function(){const instanceData=Dashboard.data.getInstanceData();Dashboard.data.initializeHostnameCache();Dashboard.data.loadCustomOrder();Dashboard.data.loadMemberStates();Dashboard.data.loadHostnameCache();Dashboard.data.loadAliasMode();};Dashboard.data.initializeHostnameCache=function(){const instanceData=Dashboard.data.getInstanceData();instanceData.hostnameCache={maxEntries:5000,chunkSize:250,persistencePrefix:'hostnameCache_'};};Dashboard.data.updateMemberStates=function(data){if(!data.pools||data.pools.length===0){return;}const instanceData=Dashboard.data.getInstanceData();let hasStateChanges=false;let hasNewMembers=false;let hasAutoAcknowledgments=false;const currentTime=Date.now();const siteName=Dashboard.state.currentSite||'UNKNOWN';const hostname=data.hostname||'unknown';const shouldDebug=(window.dashboardConfig&&window.dashboardConfig.debugEnabled)||(data.debug_enabled==="enabled");instanceData.memberStateCache.clear();data.pools.forEach(function(pool){if(!pool.members||pool.members.length===0){return;}pool.members.forEach(function(member){const memberIP=Dashboard.data.extractMemberIP(member);const keys=Dashboard.data.generateMemberKeys(pool.name,memberIP,member.port,member.hostname);const primaryKey=keys.primaryKey;const secondaryKey=keys.secondaryKey;let currentState=instanceData.memberStates[primaryKey];if(!currentState&&secondaryKey&&instanceData.memberStates[secondaryKey]){currentState=instanceData.memberStates[secondaryKey];instanceData.memberStates[primaryKey]=currentState;delete instanceData.memberStates[secondaryKey];}const displayAddress=(member.hostname!==null&&member.hostname!==undefined)?member.hostname:memberIP;const displayMember=displayAddress+':'+member.port;if(!currentState){instanceData.memberStates[primaryKey]={baseline:member.status,current:member.status,needsAck:false,lastSeen:currentTime,history:Dashboard.data.createCircularBuffer(instanceData.config.maxHistoryEntries),primaryKey:primaryKey,secondaryKey:secondaryKey};hasNewMembers=true;}else{currentState.primaryKey=primaryKey;currentState.secondaryKey=secondaryKey;const previousStatus=currentState.current;currentState.current=member.status;currentState.lastSeen=currentTime;if(previousStatus!==member.status){Dashboard.data.safeLogMemberChange(previousStatus,member.status,displayMember,pool.name,siteName,hostname);Dashboard.data.addToBuffer(currentState.history,{timestamp:currentTime,from:previousStatus,to:member.status});if(member.status===currentState.baseline){currentState.needsAck=false;hasAutoAcknowledgments=true;}else{currentState.needsAck=true;hasStateChanges=true;}}}});});if(hasNewMembers||hasStateChanges||hasAutoAcknowledgments){Dashboard.data.saveMemberStates();}};Dashboard.data.hasMemberStatusChanged=function(poolName,memberAddress,memberPort){const instanceData=Dashboard.data.getInstanceData();let memberKey=Dashboard.data.generateMemberKey(poolName,memberAddress,memberPort);if(instanceData.memberStateCache.has(memberKey)){return instanceData.memberStateCache.get(memberKey);}let memberState=instanceData.memberStates[memberKey];if(!memberState&&!memberAddress.match(/^\d+\.\d+\.\d+\.\d+$/)&&!memberAddress.includes('::')&&!memberAddress.startsWith('[')){for(const[key,state]of Object.entries(instanceData.memberStates)){if(state.secondaryKey===memberKey){memberState=state;memberKey=key;break;}}}const result=memberState?memberState.needsAck:false;instanceData.memberStateCache.set(memberKey,result);return result;};Dashboard.data.acknowledgeMemberChange=function(poolName,memberAddress,memberPort){const instanceData=Dashboard.data.getInstanceData();if(!memberAddress.match(/^\d+\.\d+\.\d+\.\d+$/)&&!memberAddress.includes(':')&&!memberAddress.startsWith('[')){return;}let memberKey=Dashboard.data.generateMemberKey(poolName,memberAddress,memberPort);let memberState=instanceData.memberStates[memberKey];if(!memberState&&!memberAddress.match(/^\d+\.\d+\.\d+\.\d+$/)&&!memberAddress.includes('::')&&!memberAddress.startsWith('[')){for(const[key,state]of Object.entries(instanceData.memberStates)){if(state.secondaryKey===memberKey){memberState=state;memberKey=key;break;}}}if(!memberState){return;}memberState.baseline=memberState.current;memberState.needsAck=false;instanceData.memberStateCache.delete(memberKey);Dashboard.data.addToBuffer(memberState.history,{timestamp:Date.now(),from:'acknowledged',to:memberState.current});Dashboard.data.saveMemberStates();try{const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);const currentData=JSON.parse(sessionStorage.getItem(cacheKey)||'{}');if(currentData.pools&&Dashboard.ui&&Dashboard.ui.renderPoolData){Dashboard.ui.renderPoolData(currentData);}}catch(e){}};Dashboard.data.resetAllMemberStates=function(){const instanceData=Dashboard.data.getInstanceData();const totalStatesBefore=Object.keys(instanceData.memberStates).length;instanceData.memberStates={};instanceData.memberStateCache.clear();Dashboard.data.clearPendingLogs();Dashboard.data.clearDraggedElement();try{const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);const currentData=JSON.parse(sessionStorage.getItem(cacheKey)||'{}');if(currentData.pools&&Dashboard.ui&&Dashboard.ui.renderPoolData){Dashboard.ui.renderPoolData(currentData);}}catch(e){}};Dashboard.data.getMemberState=function(poolName,memberAddress,memberPort){const instanceData=Dashboard.data.getInstanceData();let memberKey=Dashboard.data.generateMemberKey(poolName,memberAddress,memberPort);let memberState=instanceData.memberStates[memberKey];if(!memberState&&!memberAddress.match(/^\d+\.\d+\.\d+\.\d+$/)&&!memberAddress.includes('::')&&!memberAddress.startsWith('[')){for(const[key,state]of Object.entries(instanceData.memberStates)){if(state.secondaryKey===memberKey){return state;}}}return memberState||null;};Dashboard.data.getMemberHistory=function(poolName,memberAddress,memberPort,count=10){const memberState=Dashboard.data.getMemberState(poolName,memberAddress,memberPort);if(!memberState||!memberState.history){return[];}return Dashboard.data.getRecentEntries(memberState.history,count);};Dashboard.data.toggleReorderMode=function(){const instanceData=Dashboard.data.getInstanceData();instanceData.reorderMode=!instanceData.reorderMode;const toggle=document.getElementById('reorder-toggle');const containers=document.querySelectorAll('.pool-container');if(instanceData.reorderMode){if(toggle){toggle.textContent='Disable';toggle.classList.add('active');}containers.forEach(container=>{container.draggable=true;container.addEventListener('dragstart',Dashboard.data.handleDragStart);container.addEventListener('dragend',Dashboard.data.handleDragEnd);container.addEventListener('dragover',Dashboard.data.handleDragOver);container.addEventListener('drop',Dashboard.data.handleDrop);const dragHandle=document.createElement('div');dragHandle.className='drag-handle';dragHandle.title='Drag to reorder';container.style.position='relative';container.appendChild(dragHandle);});}else{if(toggle){toggle.textContent='Reorder';toggle.classList.remove('active');}containers.forEach(function(container){container.draggable=false;container.removeEventListener('dragstart',Dashboard.data.handleDragStart);container.removeEventListener('dragend',Dashboard.data.handleDragEnd);container.removeEventListener('dragover',Dashboard.data.handleDragOver);container.removeEventListener('drop',Dashboard.data.handleDrop);const dragHandle=container.querySelector('.drag-handle');if(dragHandle){dragHandle.remove();}});}};Dashboard.data.updateCustomOrder=function(draggedPool,targetPool){const instanceData=Dashboard.data.getInstanceData();const containers=Array.from(document.querySelectorAll('.pool-container:not([style*="display: none"])'));const currentOrder={};containers.forEach(function(container,index){const poolName=container.getAttribute('data-pool-name');currentOrder[poolName]=index;});const draggedIndex=currentOrder[draggedPool];const targetIndex=currentOrder[targetPool];const newOrder={};Object.keys(currentOrder).forEach(function(poolName){if(poolName===draggedPool){newOrder[poolName]=targetIndex;}else if(poolName===targetPool){newOrder[poolName]=draggedIndex;}else{newOrder[poolName]=currentOrder[poolName];}});instanceData.customOrder=newOrder;Dashboard.data.saveCustomOrder();};Dashboard.data.buildPoolHeaders=function(){const visiblePools=Dashboard.ui&&Dashboard.ui.getVisiblePoolNames?Dashboard.ui.getVisiblePoolNames():[];if(visiblePools.length===0){return{};}const headers={};const chunkSize=5;const headerCount=Math.ceil(visiblePools.length/chunkSize);headers['X-Need-Pools-Count']=headerCount.toString();let currentHeaderIndex=1;for(let i=0;i<visiblePools.length;i+=chunkSize){const chunk=visiblePools.slice(i,i+chunkSize);headers[`X-Need-Pools-${currentHeaderIndex}`]=chunk.join(',');currentHeaderIndex++;}return headers;};Dashboard.data.getHostnameFromCache=function(ip){if(!Dashboard.state||!Dashboard.state.currentSite){return null;}const instanceData=Dashboard.data.getInstanceData();const cacheKey=Dashboard.core.getStorageKey(instanceData.hostnameCache.persistencePrefix+Dashboard.state.currentSite);try{const savedCache=sessionStorage.getItem(cacheKey);if(savedCache){const cacheData=JSON.parse(savedCache);return cacheData.entries[ip]||null;}}catch(e){}return null;};Dashboard.data.setHostnameInCache=function(ip,hostname){if(!Dashboard.state||!Dashboard.state.currentSite){return;}const instanceData=Dashboard.data.getInstanceData();const cacheKey=Dashboard.core.getStorageKey(instanceData.hostnameCache.persistencePrefix+Dashboard.state.currentSite);try{let cacheData={entries:{},timestamp:Date.now(),siteId:Dashboard.state.currentSite};const savedCache=sessionStorage.getItem(cacheKey);if(savedCache){cacheData=JSON.parse(savedCache);}cacheData.entries[ip]=hostname;cacheData.timestamp=Date.now();const entryCount=Object.keys(cacheData.entries).length;if(entryCount>instanceData.hostnameCache.maxEntries){const entries=Object.entries(cacheData.entries);const keepCount=Math.floor(instanceData.hostnameCache.maxEntries*0.8);const prunedEntries=entries.slice(-keepCount);cacheData.entries={};prunedEntries.forEach(([ip,hostname])=>{cacheData.entries[ip]=hostname;});}sessionStorage.setItem(cacheKey,JSON.stringify(cacheData));}catch(e){}};Dashboard.data.getHostnameCacheSize=function(){if(!Dashboard.state||!Dashboard.state.currentSite){return 0;}const instanceData=Dashboard.data.getInstanceData();const cacheKey=Dashboard.core.getStorageKey(instanceData.hostnameCache.persistencePrefix+Dashboard.state.currentSite);try{const savedCache=sessionStorage.getItem(cacheKey);if(savedCache){const cacheData=JSON.parse(savedCache);return Object.keys(cacheData.entries).length;}}catch(e){}return 0;};Dashboard.data.loadHostnameCache=function(){};Dashboard.data.saveHostnameCache=function(){};Dashboard.data.pruneHostnameCache=function(){};Dashboard.data.flushHostnameCache=function(){if(!Dashboard.state||!Dashboard.state.currentSite){return 0;}const instanceData=Dashboard.data.getInstanceData();const cacheKey=Dashboard.core.getStorageKey(instanceData.hostnameCache.persistencePrefix+Dashboard.state.currentSite);let cacheSize=0;try{cacheSize=Dashboard.data.getHostnameCacheSize();sessionStorage.removeItem(cacheKey);}catch(e){}return cacheSize;};Dashboard.data.getIPsNeedingDNS=function(apiData){if(!apiData||!apiData.pools){return[];}const unknownIPs=new Set();apiData.pools.forEach(pool=>{if(pool.members&&Array.isArray(pool.members)){pool.members.forEach(member=>{const ip=member.ip;if(ip&&!Dashboard.data.getHostnameFromCache(ip)){unknownIPs.add(ip);}});}});const result=Array.from(unknownIPs);return result;};Dashboard.data.getAllIPsForDNSResolution=function(apiData){if(!apiData||!apiData.pools){return[];}const needResolutionIPs=new Set();apiData.pools.forEach(pool=>{if(pool.members&&Array.isArray(pool.members)){pool.members.forEach(member=>{const ip=member.ip;if(ip){const cachedHostname=Dashboard.data.getHostnameFromCache(ip);if(!cachedHostname){needResolutionIPs.add(ip);}}});}});const result=Array.from(needResolutionIPs);return result;};Dashboard.data.buildNeedDNSHeaders=function(ipArray){if(!ipArray||ipArray.length===0){return{};}const instanceData=Dashboard.data.getInstanceData();const headers={};const chunkSize=instanceData.hostnameCache.chunkSize;let headerCount=0;for(let i=0;i<ipArray.length;i+=chunkSize){headerCount++;const chunk=ipArray.slice(i,i+chunkSize);headers[`X-Need-DNS-IPs-${headerCount}`]=chunk.join(',');}headers['X-Need-DNS-Count']=headerCount.toString();return headers;};Dashboard.data.getHostnameCacheStats=function(){return{cacheSize:Dashboard.data.getHostnameCacheSize(),maxEntries:Dashboard.data.getInstanceData().hostnameCache.maxEntries,hitRate:0,currentSite:Dashboard.state?Dashboard.state.currentSite:'unknown'};};Dashboard.data.loadAliasMode=function(){if(!Dashboard.state||!Dashboard.state.currentSite){Dashboard.state.currentAliasMode=true;return;}const storageKey=Dashboard.core.getStorageKey('aliasMode_'+Dashboard.state.currentSite);try{const savedMode=sessionStorage.getItem(storageKey);if(savedMode!==null){Dashboard.state.currentAliasMode=savedMode==='true';}else{Dashboard.state.currentAliasMode=true;}}catch(e){Dashboard.state.currentAliasMode=true;}};Dashboard.data.saveAliasMode=function(){if(!Dashboard.state||!Dashboard.state.currentSite){return;}const storageKey=Dashboard.core.getStorageKey('aliasMode_'+Dashboard.state.currentSite);try{sessionStorage.setItem(storageKey,Dashboard.state.currentAliasMode.toString());}catch(e){}};Dashboard.data.loadMemberStates=function(){const instanceData=Dashboard.data.getInstanceData();const storageKey=Dashboard.core.getStorageKey('memberStates_'+Dashboard.state.currentSite);const savedStates=sessionStorage.getItem(storageKey);if(savedStates){try{const data=JSON.parse(savedStates);Object.keys(data).forEach(memberKey=>{const savedState=data[memberKey];instanceData.memberStates[memberKey]={baseline:savedState.baseline,current:savedState.current,needsAck:savedState.needsAck,lastSeen:savedState.lastSeen,history:Dashboard.data.createCircularBuffer(instanceData.config.maxHistoryEntries),primaryKey:savedState.primaryKey||memberKey,secondaryKey:savedState.secondaryKey||null};if(savedState.history&&savedState.history.entries){const restoredBuffer=instanceData.memberStates[memberKey].history;savedState.history.entries.forEach((entry,index)=>{if(entry&&index<savedState.history.count){restoredBuffer.entries[index]=entry;}});restoredBuffer.head=savedState.history.head||0;restoredBuffer.count=savedState.history.count||0;}});}catch(e){instanceData.memberStates={};}}};Dashboard.data.saveMemberStates=function(){if(!Dashboard.state.currentSite){return;}const instanceData=Dashboard.data.getInstanceData();const serializable={};Object.keys(instanceData.memberStates).forEach(memberKey=>{const state=instanceData.memberStates[memberKey];const historyEntries=[];for(let i=0;i<state.history.count;i++){const entry=state.history.entries[i];if(entry){historyEntries.push(entry);}}serializable[memberKey]={baseline:state.baseline,current:state.current,needsAck:state.needsAck,lastSeen:state.lastSeen,history:{entries:historyEntries,head:state.history.head,count:state.history.count},primaryKey:state.primaryKey,secondaryKey:state.secondaryKey};});try{const storageKey=Dashboard.core.getStorageKey('memberStates_'+Dashboard.state.currentSite);sessionStorage.setItem(storageKey,JSON.stringify(serializable));}catch(e){if(e.name==='QuotaExceededError'){Dashboard.data.performEmergencyCleanup();}}};Dashboard.data.loadCustomOrder=function(){const instanceData=Dashboard.data.getInstanceData();const storageKey=Dashboard.core.getStorageKey('poolCustomOrder_'+Dashboard.state.currentSite);const savedOrder=sessionStorage.getItem(storageKey);if(savedOrder){try{instanceData.customOrder=JSON.parse(savedOrder);}catch(e){instanceData.customOrder={};}}};Dashboard.data.saveCustomOrder=function(){if(Dashboard.state.currentSite){const instanceData=Dashboard.data.getInstanceData();const storageKey=Dashboard.core.getStorageKey('poolCustomOrder_'+Dashboard.state.currentSite);sessionStorage.setItem(storageKey,JSON.stringify(instanceData.customOrder));}};Dashboard.data.enableLogger=function(){const instanceData=Dashboard.data.getInstanceData();instanceData.logger.enabled=true;if(instanceData.logger.pendingLogs.length>0){instanceData.logger.pendingLogs.forEach(log=>{Dashboard.data.safeLogMemberChange(log.fromStatus,log.toStatus,log.member,log.pool,log.siteName,log.hostname);});instanceData.logger.pendingLogs=[];}};Dashboard.data.disableLogger=function(){const instanceData=Dashboard.data.getInstanceData();instanceData.logger.enabled=false;};Dashboard.data.safeLogMemberChange=function(fromStatus,toStatus,member,pool,siteName,hostname){const instanceData=Dashboard.data.getInstanceData();if(!instanceData.logger.enabled)return;let loggerAddEntry=null;if(Dashboard.logger&&Dashboard.logger.addLogEntry){loggerAddEntry=Dashboard.logger.addLogEntry;}else if(Dashboard.ui&&Dashboard.ui.addLogEntry){loggerAddEntry=Dashboard.ui.addLogEntry;}if(loggerAddEntry){try{loggerAddEntry(fromStatus,toStatus,member,pool,siteName,hostname);}catch(error){Dashboard.data.storePendingLog(fromStatus,toStatus,member,pool,siteName,hostname);}}else{Dashboard.data.storePendingLog(fromStatus,toStatus,member,pool,siteName,hostname);}};Dashboard.data.storePendingLog=function(fromStatus,toStatus,member,pool,siteName,hostname){const instanceData=Dashboard.data.getInstanceData();instanceData.logger.pendingLogs.push({fromStatus,toStatus,member,pool,siteName,hostname,timestamp:Date.now()});const maxPendingLogs=50;if(instanceData.logger.pendingLogs.length>maxPendingLogs){const removed=instanceData.logger.pendingLogs.shift();}setTimeout(()=>{if(instanceData.logger.enabled){const hasLogger=(Dashboard.logger&&Dashboard.logger.addLogEntry)||(Dashboard.ui&&Dashboard.ui.addLogEntry);if(hasLogger){const pending=instanceData.logger.pendingLogs.shift();if(pending){Dashboard.data.safeLogMemberChange(pending.fromStatus,pending.toStatus,pending.member,pending.pool,pending.siteName,pending.hostname);}}}},1000);};Dashboard.data.logMemberChange=Dashboard.data.safeLogMemberChange;Dashboard.data.performEmergencyCleanup=function(){const instanceData=Dashboard.data.getInstanceData();Object.keys(instanceData.memberStates).forEach(memberKey=>{const state=instanceData.memberStates[memberKey];if(state.history&&state.history.count>10){const recentEntries=Dashboard.data.getRecentEntries(state.history,10);state.history=Dashboard.data.createCircularBuffer(10);recentEntries.reverse().forEach(entry=>{Dashboard.data.addToBuffer(state.history,entry);});}});instanceData.memberStateCache.clear();Dashboard.data.clearPendingLogs();try{Dashboard.data.saveMemberStates();}catch(e){}};Dashboard.data.getChangedMembersSummary=function(){const instanceData=Dashboard.data.getInstanceData();const changedMembers=[];Object.keys(instanceData.memberStates).forEach(function(memberKey){const memberState=instanceData.memberStates[memberKey];if(memberState.needsAck){const recentHistory=Dashboard.data.getRecentEntries(memberState.history,1);const lastChange=recentHistory[0];changedMembers.push({memberKey:memberKey,baseline:memberState.baseline,current:memberState.current,lastSeen:new Date(memberState.lastSeen).toLocaleTimeString(),lastChange:lastChange?new Date(lastChange.timestamp).toLocaleTimeString():'Unknown',historyCount:memberState.history.count});}});return changedMembers;};Dashboard.data.getMemoryStats=function(){const instanceData=Dashboard.data.getInstanceData();const memberCount=Object.keys(instanceData.memberStates).length;const totalHistoryEntries=Object.values(instanceData.memberStates).reduce((total,state)=>{return total+(state.history?state.history.count:0);},0);const bytesPerMember=200;const bytesPerHistoryEntry=40;const bytesPerCacheEntry=50;const cacheSize=instanceData.memberStateCache.size;const pendingLogsSize=instanceData.logger.pendingLogs.length;const hostnameCacheSize=Dashboard.data.getHostnameCacheSize();const estimatedMemory=(memberCount*bytesPerMember)+(totalHistoryEntries*bytesPerHistoryEntry)+(cacheSize*bytesPerCacheEntry)+(pendingLogsSize*100)+(hostnameCacheSize*60);return{memberCount:memberCount,totalHistoryEntries:totalHistoryEntries,cacheSize:cacheSize,pendingLogsCount:pendingLogsSize,hostnameCacheSize:hostnameCacheSize,maxPossibleEntries:memberCount*instanceData.config.maxHistoryEntries,estimatedMemoryBytes:estimatedMemory,estimatedMemoryMB:(estimatedMemory/1024/1024).toFixed(2),maxMemoryMB:((memberCount*instanceData.config.maxHistoryEntries*bytesPerHistoryEntry)/1024/1024).toFixed(2),loggerEnabled:instanceData.logger.enabled};};Dashboard.data.handleDragStart=function(e){const instanceData=Dashboard.data.getInstanceData();instanceData.draggedElement=e.target;e.target.classList.add('dragging');e.dataTransfer.effectAllowed='move';e.dataTransfer.setData('text/html',e.target.outerHTML);};Dashboard.data.handleDragEnd=function(e){const instanceData=Dashboard.data.getInstanceData();e.target.classList.remove('dragging');instanceData.draggedElement=null;document.querySelectorAll('.pool-container').forEach(function(container){container.classList.remove('drag-over');});};Dashboard.data.handleDragOver=function(e){if(e.preventDefault){e.preventDefault();}e.dataTransfer.dropEffect='move';e.target.closest('.pool-container').classList.add('drag-over');return false;};Dashboard.data.handleDrop=function(e){const instanceData=Dashboard.data.getInstanceData();if(e.stopPropagation){e.stopPropagation();}const dropTarget=e.target.closest('.pool-container');dropTarget.classList.remove('drag-over');if(instanceData.draggedElement!==dropTarget){const draggedPoolName=instanceData.draggedElement.getAttribute('data-pool-name');const targetPoolName=dropTarget.getAttribute('data-pool-name');Dashboard.data.updateCustomOrder(draggedPoolName,targetPoolName);try{const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);const currentData=JSON.parse(sessionStorage.getItem(cacheKey)||'{}');if(currentData.pools&&Dashboard.ui&&Dashboard.ui.renderPoolData){Dashboard.ui.renderPoolData(currentData);}}catch(e){}}instanceData.draggedElement=null;return false;};Dashboard.data.parseMemberAddress=function(memberText){if(!memberText||typeof memberText!=='string'){return{ip:'',port:'',isValid:false};}const text=memberText.trim();if(!text.match(/^\d/)&&!text.startsWith('[')&&text.includes(':')){return{ip:'',port:'',isValid:false};}if(text.startsWith('[')&&text.includes(']:')){const bracketEnd=text.indexOf(']:');const ip=text.substring(1,bracketEnd);const port=text.substring(bracketEnd+2);if(ip.length>0&&port.length>0&&!isNaN(parseInt(port))){return{ip:ip,port:port,isValid:true};}}if(text.includes(':')&&text.includes('.')&&!text.includes(']:')){const lastDotIndex=text.lastIndexOf('.');const ip=text.substring(0,lastDotIndex);const port=text.substring(lastDotIndex+1);if((ip.includes('::')||(ip.split(':').length>=3))&&port.length>0&&!isNaN(parseInt(port))){return{ip:ip,port:port,isValid:true};}}if(text.includes(':')&&(text.includes('::')||text.split(':').length>2)){const lastColonIndex=text.lastIndexOf(':');const ip=text.substring(0,lastColonIndex);const port=text.substring(lastColonIndex+1);if((ip.includes('::')||ip.split(':').length>=2)&&port.length>0&&!isNaN(parseInt(port))&&port.indexOf(':')===-1){return{ip:ip,port:port,isValid:true};}}if(text.includes(':')&&!text.includes('::')){const parts=text.split(':');if(parts.length===2){const ip=parts[0].trim();const port=parts[1].trim();const ipParts=ip.split('.');if(ipParts.length===4&&ip.length>0&&port.length>0&&!isNaN(parseInt(port))){return{ip:ip,port:port,isValid:true};}}}return{ip:'',port:'',isValid:false};};Dashboard.data.generateMemberKey=function(poolName,ip,port){let normalizedIp=ip;return poolName+'_'+normalizedIp+':'+port;};Dashboard.data.generateMemberKeys=function(poolName,ip,port,hostname=null){const primaryKey=poolName+'_'+ip+':'+port;let secondaryKey=null;if(hostname&&hostname!==ip&&hostname!==null&&hostname!==undefined){secondaryKey=poolName+'_'+hostname+':'+port;}return{primaryKey,secondaryKey};};Dashboard.data.extractMemberIP=function(member){return member.ip||'';};Dashboard.data.createCircularBuffer=function(size=50){return{entries:new Array(size),head:0,count:0,maxSize:size};};Dashboard.data.addToBuffer=function(buffer,entry){buffer.entries[buffer.head]=entry;buffer.head=(buffer.head+1)%buffer.maxSize;if(buffer.count<buffer.maxSize){buffer.count++;}};Dashboard.data.getRecentEntries=function(buffer,count=buffer.count){if(buffer.count===0)return[];const result=[];const maxEntries=Math.min(count,buffer.count);for(let i=0;i<maxEntries;i++){const index=(buffer.head-1-i+buffer.maxSize)%buffer.maxSize;if(buffer.entries[index]){result.push(buffer.entries[index]);}}return result;};Dashboard.data.clearPendingLogs=function(){const instanceData=Dashboard.data.getInstanceData();const logCount=instanceData.logger.pendingLogs.length;instanceData.logger.pendingLogs=[];};Dashboard.data.clearDraggedElement=function(){const instanceData=Dashboard.data.getInstanceData();if(instanceData.draggedElement){instanceData.draggedElement=null;}};console.log('Dashboard Data module loaded successfully');