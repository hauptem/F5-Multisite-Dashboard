// Multi-Site Dashboard JavaScript - CLIENT MODULE - Dashboard Version: 1.8 - Author: Eric Haupt - Copyright (c) 2025 Eric Haupt - Released under the MIT License. See LICENSE file for details.
if(!window.Dashboard){window.Dashboard={};}if(!window.Dashboard.client){window.Dashboard.client={};}Dashboard.client.init=function(){Dashboard.client.state={currentLoadController:null,initialized:false};if(Dashboard.state&&Dashboard.state.isLoading===undefined){Dashboard.state.isLoading=false;}Dashboard.client.config={defaultHeaders:{'Cache-Control':'no-cache, no-store, must-revalidate','Pragma':'no-cache','Expires':'0'},endpoints:{poolData:'/api/proxy/pools',settings:'/'}};Dashboard.client.state.initialized=true;};Dashboard.client.buildRequestHeaders=function(additionalHeaders={}){return Object.assign({},Dashboard.client.config.defaultHeaders,additionalHeaders);};Dashboard.client.cancelPendingRequests=function(){if(Dashboard.client.state.currentLoadController){Dashboard.client.state.currentLoadController.abort();Dashboard.client.state.currentLoadController=null;}};Dashboard.client.createRequestController=function(){Dashboard.client.cancelPendingRequests();Dashboard.client.state.currentLoadController=new AbortController();return Dashboard.client.state.currentLoadController;};Dashboard.client.loadPoolData=function(forceDNSResolution=false){if(!Dashboard.state){return;}if(Dashboard.state.isLoading===undefined){Dashboard.state.isLoading=false;}if(Dashboard.state.isLoading){return;}if(!Dashboard.state.currentSite){if(Dashboard.ui&&Dashboard.ui.hideErrorStates){Dashboard.ui.hideErrorStates();}return;}Dashboard.state.isLoading=true;if(Dashboard.ui&&Dashboard.ui.hideErrorStates){Dashboard.ui.hideErrorStates();}const errorMessage=document.getElementById('error-message');if(errorMessage){errorMessage.style.display='none';}const fetchHeaders={};if(Dashboard.ui&&Dashboard.ui.getInstanceState){const uiInstanceState=Dashboard.ui.getInstanceState();if(uiInstanceState.searchFilterActive&&uiInstanceState.searchFilter){if(Dashboard.data&&Dashboard.data.buildPoolHeaders){const poolHeaders=Dashboard.data.buildPoolHeaders();Object.assign(fetchHeaders,poolHeaders);}}}let needDNSHeaders={};if(forceDNSResolution){const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);const currentData=JSON.parse(sessionStorage.getItem(cacheKey)||'{}');if(currentData.pools&&Dashboard.data&&Dashboard.data.getAllIPsForDNSResolution){const allIPs=Dashboard.data.getAllIPsForDNSResolution(currentData);if(allIPs.length>0&&Dashboard.data.buildNeedDNSHeaders){needDNSHeaders=Dashboard.data.buildNeedDNSHeaders(allIPs);}}}Object.keys(needDNSHeaders).forEach(headerName=>{fetchHeaders[headerName]=needDNSHeaders[headerName];});const controller=Dashboard.client.createRequestController();Dashboard.client.measureRequestPerformance('Pool Data Load',()=>{return Dashboard.client.sendPoolDataRequest(fetchHeaders,controller.signal);}).then(data=>{if(data===null){Dashboard.state.isLoading=false;return;}const shouldDebug=(window.dashboardConfig&&window.dashboardConfig.debugEnabled)||(data.debug_enabled==="enabled");if(data.debug_enabled==="enabled"&&!window.dashboardConfig.debugEnabled){window.dashboardConfig.debugEnabled=true;}let processedData=data;try{processedData=Dashboard.client.mergeWithHostnameCache(data);}catch(mergeError){processedData=data;}if(processedData.pools&&processedData.pools.length>0){let hostnameCount=0;let memberCount=0;let nullHostnameCount=0;processedData.pools.forEach(pool=>{if(pool.members){pool.members.forEach(member=>{memberCount++;if(member.hostname!==null&&member.hostname!==undefined){hostnameCount++;}else{nullHostnameCount++;}});}});}const wasFilteredRequest=Object.keys(fetchHeaders).some(h=>h.startsWith('X-Need-Pools-'));if(wasFilteredRequest){try{const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);const existingData=JSON.parse(sessionStorage.getItem(cacheKey)||'{}');if(existingData.pools&&Array.isArray(existingData.pools)){const existingPoolsMap={};existingData.pools.forEach(pool=>{existingPoolsMap[pool.name]=pool;});processedData.pools.forEach(updatedPool=>{existingPoolsMap[updatedPool.name]=updatedPool;});const mergedPools=Object.values(existingPoolsMap);const mergedData={hostname:processedData.hostname,timestamp:processedData.timestamp,debug_enabled:processedData.debug_enabled,instanceId:processedData.instanceId,pools:mergedPools};sessionStorage.setItem(cacheKey,JSON.stringify(mergedData));}else{sessionStorage.setItem(cacheKey,JSON.stringify(processedData));}}catch(mergeError){const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);sessionStorage.setItem(cacheKey,JSON.stringify(processedData));}}else{const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);sessionStorage.setItem(cacheKey,JSON.stringify(processedData));}if(Dashboard.data&&Dashboard.data.updateMemberStates){Dashboard.data.updateMemberStates(processedData);}if(Dashboard.ui&&Dashboard.ui.renderPoolData){if(wasFilteredRequest){const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);const completeData=JSON.parse(sessionStorage.getItem(cacheKey)||'{}');Dashboard.ui.renderPoolData(completeData);}else{Dashboard.ui.renderPoolData(processedData);}}if(Dashboard.core&&Dashboard.core.applyPendingViewMode){Dashboard.core.applyPendingViewMode();}Dashboard.state.isLoading=false;}).catch(error=>{if(error.name==='AbortError'){Dashboard.state.isLoading=false;return;}Dashboard.state.isLoading=false;if(Dashboard.ui&&Dashboard.ui.showError){const errorInfo=Dashboard.client.processErrorForDisplay(error);Dashboard.ui.showError(errorInfo.fullMessage);}});};Dashboard.client.bindGlobalFunctions=function(){try{window.changeSite=Dashboard.client.changeSite;window.changeRefreshInterval=Dashboard.client.changeRefreshInterval;window.loadPoolData=Dashboard.client.loadPoolData;window.resolveDNS=Dashboard.client.resolveDNS;window.flushDNSCache=Dashboard.client.flushDNSCache;}catch(error){}};Dashboard.client.changeSite=function(site){const newSite=site||'';const previousSite=Dashboard.state.currentSite;if(previousSite&&Dashboard.core&&Dashboard.core.saveViewModeForSite){Dashboard.core.saveViewModeForSite(previousSite,Dashboard.state.currentViewMode);}if(previousSite&&Dashboard.data&&Dashboard.data.saveAliasMode){Dashboard.data.saveAliasMode();}Dashboard.client.cancelPendingRequests();if(previousSite&&Dashboard.data&&Dashboard.data.saveCustomOrder){Dashboard.data.saveCustomOrder();}Dashboard.state.currentSite=newSite;if(newSite&&Dashboard.core&&Dashboard.core.loadViewModeForSite){const siteViewMode=Dashboard.core.loadViewModeForSite(newSite);Dashboard.state.pendingViewMode=siteViewMode;}else if(!newSite){Dashboard.state.currentViewMode='macro';if(Dashboard.core&&Dashboard.core.applyViewMode){Dashboard.core.applyViewMode('macro');}Dashboard.state.pendingViewMode=null;}if(newSite&&Dashboard.data&&Dashboard.data.loadAliasMode){Dashboard.data.loadAliasMode();}else{Dashboard.state.currentAliasMode=true;}if(Dashboard.core&&Dashboard.core.initializeAliasButton){Dashboard.core.initializeAliasButton();}if(newSite&&Dashboard.data&&Dashboard.data.loadCustomOrder){Dashboard.data.loadCustomOrder();}if(Dashboard.ui){const currentUIState=Dashboard.ui.getInstanceState();currentUIState.searchFilter='';currentUIState.searchFilterActive=false;if(Dashboard.ui.loadSearchFilter){Dashboard.ui.loadSearchFilter();}const updatedUIState=Dashboard.ui.getInstanceState();const searchInput=document.getElementById('poolSearchInput');if(searchInput){searchInput.value=updatedUIState.searchFilter||'';}}if(Dashboard.data&&Dashboard.data.hostnameCache){Dashboard.data.hostnameCache.cache.clear();if(Dashboard.data.loadHostnameCache){Dashboard.data.loadHostnameCache();}}const siteSelect=document.getElementById('siteSelect');if(siteSelect){siteSelect.value=newSite;}if(newSite){const noSiteMessage=document.getElementById('no-site-message');const loadingMessage=document.getElementById('loading-message');const errorMessage=document.getElementById('error-message');if(noSiteMessage){noSiteMessage.style.display='none';}if(errorMessage){errorMessage.style.display='none';}if(loadingMessage){loadingMessage.style.display='block';}Dashboard.client.loadPoolData();if(Dashboard.core&&Dashboard.core.startAutoRefresh){Dashboard.core.startAutoRefresh();}}else{if(Dashboard.ui&&Dashboard.ui.showNoSiteSelected){Dashboard.ui.showNoSiteSelected();}if(Dashboard.core&&Dashboard.core.startCountdownOnly){Dashboard.core.startCountdownOnly();}}};Dashboard.client.changeRefreshInterval=function(interval){const validIntervals=[10,30,60,90];if(!validIntervals.includes(parseInt(interval))){return;}const newInterval=parseInt(interval);Dashboard.client.sendSettingsRequest('/?refresh='+encodeURIComponent(newInterval),'refresh',newInterval).then(data=>{if(data.success){Dashboard.state.refreshInterval=newInterval;const refreshSelect=document.getElementById('refreshSelect');if(refreshSelect){refreshSelect.value=newInterval;}if(Dashboard.state.currentSite){if(Dashboard.core&&Dashboard.core.startAutoRefresh){Dashboard.core.startAutoRefresh();}}else{if(Dashboard.core&&Dashboard.core.startCountdownOnly){Dashboard.core.startCountdownOnly();}}}}).catch(error=>{Dashboard.state.refreshInterval=newInterval;const refreshSelect=document.getElementById('refreshSelect');if(refreshSelect){refreshSelect.value=newInterval;}if(Dashboard.state.currentSite){if(Dashboard.core&&Dashboard.core.startAutoRefresh){Dashboard.core.startAutoRefresh();}}else{if(Dashboard.core&&Dashboard.core.startCountdownOnly){Dashboard.core.startCountdownOnly();}}});};Dashboard.client.resolveDNS=function(){if(!Dashboard.state.currentSite){return;}Dashboard.client.loadPoolData(true);};Dashboard.client.flushDNSCache=function(){if(!Dashboard.state.currentSite){let clearedCount=0;if(Dashboard.data&&Dashboard.data.flushHostnameCache){clearedCount=Dashboard.data.flushHostnameCache()||0;}return;}const errorMessage=document.getElementById('error-message');const loadingMessage=document.getElementById('loading-message');const poolsGrid=document.getElementById('pools-grid');const isShowingError=errorMessage&&window.getComputedStyle(errorMessage).display!=='none';const isShowingLoading=loadingMessage&&window.getComputedStyle(loadingMessage).display!=='none';const isShowingPools=poolsGrid&&window.getComputedStyle(poolsGrid).display!=='none'&&poolsGrid.children.length>0;if(isShowingError||isShowingLoading||!isShowingPools){let clearedCount=0;if(Dashboard.data&&Dashboard.data.flushHostnameCache){clearedCount=Dashboard.data.flushHostnameCache()||0;}return;}let clearedCount=0;if(Dashboard.data&&Dashboard.data.flushHostnameCache){clearedCount=Dashboard.data.flushHostnameCache()||0;}try{const cacheKey=Dashboard.core.getStorageKey('currentPoolData_'+Dashboard.state.currentSite);const currentData=JSON.parse(sessionStorage.getItem(cacheKey)||'{}');if(currentData.pools&&currentData.pools.length>0&&Dashboard.ui&&Dashboard.ui.renderPoolData){currentData.pools.forEach(pool=>{if(pool.members&&Array.isArray(pool.members)){pool.members.forEach(member=>{member.hostname=null;});}});sessionStorage.setItem(cacheKey,JSON.stringify(currentData));Dashboard.ui.renderPoolData(currentData);}}catch(e){}};Dashboard.client.mergeWithHostnameCache=function(apiResponse){if(!apiResponse||!apiResponse.pools){return apiResponse;}if(!Dashboard.data||!Dashboard.data.getHostnameFromCache||!Dashboard.data.setHostnameInCache){return apiResponse;}let cacheHits=0;let cacheMisses=0;let newEntries=0;apiResponse.pools.forEach(pool=>{if(pool.members&&Array.isArray(pool.members)){pool.members.forEach(member=>{const ip=member.ip;if(member.hostname===null){const cachedHostname=Dashboard.data.getHostnameFromCache(ip);if(cachedHostname){member.hostname=cachedHostname;cacheHits++;}else{cacheMisses++;}}else if(member.hostname!==null){Dashboard.data.setHostnameInCache(ip,member.hostname);newEntries++;}else{cacheMisses++;}});}});return apiResponse;};Dashboard.client.processJSONResponse=function(response){if(!response.ok){const contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){return response.json().then(errorData=>{const error=new Error('JSON_ERROR');error.cause=errorData;throw error;},jsonParseError=>{throw new Error('HTTP '+response.status+': '+(response.statusText||'Request failed'));});}else{throw new Error('HTTP '+response.status+': '+(response.statusText||'Request failed'));}}const contentType=response.headers.get('content-type');if(!contentType||!contentType.includes('application/json')){throw new Error('Invalid content type: '+(contentType||'unknown'));}return response.json();};Dashboard.client.sendSettingsRequest=function(endpoint,parameter,value){const headers=Dashboard.client.buildRequestHeaders({'Content-Type':'application/x-www-form-urlencoded'});const body=parameter+'='+encodeURIComponent(value);return fetch(endpoint,{method:'POST',headers:headers,body:body}).then(response=>Dashboard.client.processJSONResponse(response));};Dashboard.client.sendPoolDataRequest=function(requestHeaders={},signal=null){if(!Dashboard.core.instanceID){Dashboard.core.initializeInstanceIsolation();}const headers=Dashboard.client.buildRequestHeaders(requestHeaders);headers['X-Instance-ID']=Dashboard.core.instanceID;headers['X-Selected-Site']=Dashboard.state.currentSite||'';const requestOptions={method:'GET',headers:headers};if(signal){requestOptions.signal=signal;}const endpointWithInstanceID=Dashboard.client.config.endpoints.poolData+'?instanceId='+encodeURIComponent(Dashboard.core.instanceID);return fetch(endpointWithInstanceID,requestOptions).then(response=>Dashboard.client.processJSONResponse(response)).then(data=>Dashboard.client.validateInstanceResponse(data));};Dashboard.client.validateInstanceResponse=function(data){if(!data.hasOwnProperty('instanceId')){return data;}if(data.instanceId!==Dashboard.core.instanceID){return null;}return data;};Dashboard.client.processErrorForDisplay=function(error){let userMessage='Unable to complete the requested operation.';let debugInfo='';if(error.message==='JSON_ERROR'&&error.cause){const errorData=error.cause;userMessage=errorData.message||'An error occurred on the selected site.';if(errorData.hostname){debugInfo+='<br><strong>Source:</strong> '+errorData.hostname;}if(errorData.timestamp){debugInfo+='<br><strong>Time:</strong> '+errorData.timestamp;}if(errorData.error){debugInfo+='<br><strong>Error Type:</strong> '+errorData.error;}if(errorData.version){debugInfo+='<br><strong>API Version:</strong> '+errorData.version;}}else{if(error.message.includes('HTTP 503')){userMessage='The selected site is currently unavailable or unreachable.';}else if(error.message.includes('HTTP 502')){userMessage='Bad response from the selected site API.';}else if(error.message.includes('HTTP 504')){userMessage='Timeout waiting for response from the selected site.';}else if(error.message.includes('Failed to fetch')||error.message.includes('NetworkError')){userMessage='Network connection failed. Please check your connection and try again.';}else if(error.message.includes('Invalid content type')){userMessage='The selected site returned invalid data format.';}debugInfo='<br><br><strong>Error details:</strong> '+error.message;}return{userMessage:userMessage,debugInfo:debugInfo,fullMessage:userMessage+debugInfo};};Dashboard.client.measureRequestPerformance=function(operationName,requestFunction){const startTime=Date.now();return requestFunction().then(result=>{const totalTime=Date.now()-startTime;return result;}).catch(error=>{const totalTime=Date.now()-startTime;throw error;});};Dashboard.client.retryRequest=function(requestFunction,maxRetries=2,baseDelay=1000){let attempt=0;const attemptRequest=function(){attempt++;return requestFunction().catch(error=>{if(attempt>=maxRetries||error.name==='AbortError'){throw error;}const delay=baseDelay*Math.pow(2,attempt-1);return new Promise(resolve=>{setTimeout(()=>{resolve(attemptRequest());},delay);});});};return attemptRequest();};Dashboard.client.cleanup=function(){try{Dashboard.client.cancelPendingRequests();Dashboard.client.state.initialized=false;}catch(error){}};Dashboard.client.autoInit=function(){if(document.readyState!=='complete'&&document.readyState!=='interactive'){setTimeout(Dashboard.client.autoInit,50);return;}Dashboard.client.init();};if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',Dashboard.client.autoInit);}else{setTimeout(Dashboard.client.autoInit,10);}window.addEventListener('beforeunload',Dashboard.client.cleanup);console.log('Dashboard Client module loaded successfully');